(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{Cx1X:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.User=class{constructor(e){this.points=0,this.uid=e}addPoints(e){this.points+=e}}},H7nG:function(e,t,n){"use strict";var s=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))(function(i,a){function r(e){try{u(s.next(e))}catch(e){a(e)}}function o(e){try{u(s.throw(e))}catch(e){a(e)}}function u(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(r,o)}u((s=s.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const i=n("dr/t"),a=n("oREH"),r=n("+jIT");t.Guess=class{constructor(e,t){this.ready=!1,this.ref=e,this.question=t}createListeners(){this.ref.child("amount").on("value",e=>{this.amount=e.val(),this.user&&this.user.addPoints(this.getPoints()),i.rerender()}),this.ref.child("guess").on("value",e=>{this.guess=e.val(),r.state.user&&r.state.user.uid===this.question.game.creator.uid&&this.check(),i.rerender()}),this.ref.child("ready").on("value",e=>{this.ready=e.val(),i.rerender()})}check(){return s(this,void 0,void 0,function*(){let e=0;0===this.question.mode?e=yield a.getPasswordCount(this.guess):null!==this.guess&&this.guess.length>0&&!isNaN(this.guess)&&(e=parseInt(this.guess)),this.ref.child("amount").set(e)})}getPoints(){let e=this.amount,t=this.question.question;if(e<t){const n=e;e=t,t=n}if(0==e)return 0;const n=Math.log(1+t/e*(Math.E-1));return n<1?Math.round(100*n):100}}},aJ1d:function(e,t,n){"use strict";var s=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))(function(i,a){function r(e){try{u(s.next(e))}catch(e){a(e)}}function o(e){try{u(s.throw(e))}catch(e){a(e)}}function u(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(r,o)}u((s=s.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const i=n("pt7V"),a=n("dr/t"),r=n("+jIT"),o=n("Cx1X");t.Game=class{constructor(e){this.round=0,this.hackLastQuestion=0,this.maxRounds=10,this.mode=0,this.questions=new Set,this.players=new Set,this.finished=!1,this.started=!1,this.ref=e,this.createListeners()}create(e){return this.ref.child("creator").set(e.uid),this.addPlayer(e),this}newQuestion(){return s(this,void 0,void 0,function*(){const e=this.ref.child("questions").push(),t=new i.Question(e,this);return t.mode=this.mode,void 0!==this.currentQuestion&&this.questions.has(this.currentQuestion)&&(this.currentQuestion.done=!0,a.rerender()),t.load()})}addPlayer(e){return this.ref.child("players").child(e.uid).set(e.displayName)}createListeners(){this.ref.child("questions").on("child_added",e=>{"leaderboard"===r.state.page&&(++this.round,r.state.page="question");const t=new i.Question(e.ref,this);t.createListeners(),this.questions.add(t),t.done=!0,a.rerender()}),this.ref.child("players").on("child_added",e=>{const t=new o.User(e.key);t.displayName=e.val(),this.players.add(t),"name"===r.state.page&&r.state.user.uid===t.uid&&a.changePage("question")}),this.ref.child("finished").on("value",e=>{this.finished=e.val()}),this.ref.child("creator").on("value",e=>{this.creator=new o.User(e.val())})}}},oREH:function(e,t,n){"use strict";n.r(t),n.d(t,"createNewGame",function(){return r}),n.d(t,"createNewQuestion",function(){return o}),n.d(t,"addPlayerToGame",function(){return u}),n.d(t,"answerQuestion",function(){return d}),n.d(t,"playerReady",function(){return c}),n.d(t,"getPasswordCount",function(){return h}),n.d(t,"retrievePseudoRandomNumber",function(){return m}),n.d(t,"joinGame",function(){return p}),n.d(t,"openGame",function(){return l}),n("qiDv");var s=n("j5MT"),i=(n("jHEe"),n("dr/t"),n("aJ1d"));const a=s.database().ref("games");function r(e){state.game=new i.Game(a.push()),state.game.mode=state.mode,state.game.create(e),state.game.newQuestion()}function o(){state.game.newQuestion()}function u(e,t){e.child("players").child(t.uid).set(t.displayName)}function d(e,t,n){e.child("guesses").child(t.uid).child("guess").set(n)}function c(e,t){e.child("guesses").child(t.uid).child("ready").set(42)}function h(e){return n.e(8).then(function(){var e=n("+nhe");return"object"==typeof e&&e&&e.__esModule?e:Object.assign({},"object"==typeof e&&e,{default:e})}).then(t=>{const n=t.default(e).toString().toUpperCase(),s=(n.substr(0,5),n.substr(5)),i="https://api.pwnedpasswords.com/range/"+n.substr(0,5);return fetch(i).then(e=>e.text()).then(e=>e.split(/\n/g)).then(e=>e.find(e=>e.substr(0,35)===s)).then(e=>e?parseInt(e.substr(36)):0)})}async function m(){let e=Math.floor(9999*Math.random());return n.e(7).then(function(){var e=n("QXpv");return Object.assign({},e,{default:e})}).then(async t=>{let n=t.data[e];return[n,await h(n)]})}function p(e,t){state.game=new i.Game(a.child(e)),t.points=0,state.game.addPlayer(t)}function l(e){state.game=new i.Game(a.child(e))}},pt7V:function(e,t,n){"use strict";var s=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))(function(i,a){function r(e){try{u(s.next(e))}catch(e){a(e)}}function o(e){try{u(s.throw(e))}catch(e){a(e)}}function u(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(r,o)}u((s=s.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const i=n("oREH"),a=n("dr/t"),r=n("H7nG");t.Question=class{constructor(e,t){this._mode=0,this.done=!1,this.finished=!1,this.guesses=new Map,this.ref=e,this.game=t}load(){return s(this,void 0,void 0,function*(){const[e,t]=yield i.retrievePseudoRandomNumber();this.answer=e,this.question=t})}set mode(e){0===e?this.ref.child("type").set("pw"):this.ref.child("type").set("amount")}get mode(){return this._mode}set answer(e){this.ref.child("answer").set(e)}get answer(){return this._answer}set question(e){this.ref.child("question").set(e)}get question(){return this._question}answerQuestion(e,t){return this.ref.child("guesses").child(e.uid).child("guess").set(t)}playerIsReady(e){return this.ref.child("guesses").child(e.uid).child("ready").set(42)}createListeners(){this.game.currentQuestion=this,this.ref.child("guesses").on("child_added",e=>{const t=new r.Guess(e.ref,this);t.user=[...this.game.players].find(t=>t.uid===e.key),this.guesses.set(t.user.uid,t),t.createListeners()}),this.ref.child("question").on("value",e=>{this._question=e.val(),this.done=!1,a.rerender()}),this.ref.child("answer").on("value",e=>{this._answer=e.val()}),this.ref.child("type").on("value",e=>{const t=e.val();this._mode="pw"===t?0:1,a.rerender()}),this.ref.child("finished").on("value",e=>{this.finished=e.val()})}}},qiDv:function(e,t,n){"use strict";n.r(t);var s=n("j5MT");s.initializeApp({apiKey:"AIzaSyB7ogQukblOMFJgxTBZ4u2uPX7NBfIBtP4",authDomain:"hive-site-test.firebaseapp.com",databaseURL:"https://hive-site-test.firebaseio.com",projectId:"hive-site-test",storageBucket:"hive-site-test.appspot.com",messagingSenderId:"1072509145370"}),t.default=s},qnbl:function(e,t,n){"use strict";n.r(t);var s=n("R7eb");const i=e=>s["a"]`
<img width="200" height="200" src="https://m.popkey.co/fe4ba7/DYALX.gif"  alt="loading" />
<h1>Loading...</h1>
`;var a=n("oREH"),r=n("dr/t");const o=e=>{const t=e.game.currentQuestion;if(!t.guesses.has(e.user.uid))return i();const n=t.guesses.get(e.user.uid);if(void 0===n.amount)return i();const a=1===t.mode?s["a"]`Your answer is ${n.guess}`:s["a"]`${n.guess} was leaked ${n.amount} times`;return s["a"]`
  <section>
  ${0===t.mode?s["a"]`<h1>The answer is: ${t.answer}</h1>`:""}
  <h1>${t.answer} was leaked ${t.question} times</h1>
  <h1>${a}</h1>
  <h1>You gained ${n.getPoints()} points</h1>
  <div class="button" on-click=${t=>{e.game.currentQuestion.done=!0,e.game.currentQuestion.playerIsReady(e.user),Object(r.changePage)("leaderboard")}}>View rankings</div>
  </section>
  `};var u=n("LfEo"),d=(n("qiDv"),n("j5MT")),c=(n("P1b3"),n("+jIT")),h=n("Cx1X");const m=d.auth();function p(){n.e(6).then(function(){var e=n("WsMt");return"object"==typeof e&&e&&e.__esModule?e:Object.assign({},"object"==typeof e&&e,{default:e})}).then(e=>{const t=new e.auth.AuthUI(m),n={signInFlow:"popup",signInSuccessUrl:"localhost:5000",signInOptions:[m.GoogleAuthProvider.PROVIDER_ID]};t.start("#firebaseui-auth-container",n)})}function l(){return m.signInAnonymously()}function g(){m.signOut()}m.onAuthStateChanged(e=>{e?(c.state.user=new h.User(e.uid),c.state.user.displayName=e.displayName,c.state.user.originalUser=e):console.log("logout"),Object(r.rerender)()});const f=e=>s["a"]`
<div class="button" on-click=${t=>{e.user?(Object(a.createNewGame)(e.user),Object(r.changePage)("name")):l().then(e=>{Object(a.createNewGame)(e),Object(r.changePage)("name")})}}>Create group</div>
<div class="button" on-click=${e=>Object(r.changePage)("enter_group")}>Join group</div>
`,y=e=>s["a"]`
<input type="text" placeholder="Enter your name!" name="name" id="input-username"/><br />
<input type="text" placeholder="Enter group key!" name="groupkey" id="input-groupkey" />
<div class="button" on-click=${t=>{const n=document.getElementById("input-groupkey").value;e.user.updateProfile({displayName:document.getElementById("input-username").value}),Object(a.joinGame)(n,e.user),Object(r.changePage)("question")}}>Enter group</div>
`,w=e=>{let t=!0;e.game.players.forEach(n=>{e.game.currentQuestion.guesses.has(n.uid)&&void 0!==e.game.currentQuestion.guesses.get(n.uid).ready&&42===e.game.currentQuestion.guesses.get(n.uid).ready||(t=!1),0!==e.game.hackLastQuestion&&e.game.hackLastQuestion!==e.game.currentQuestion&&(t=!0)});const n=s["a"]`
      <h1>TOP H4ck3r:</h1>
      <table>
          <thead>
              <tr>
                  <td>Name</td>
                  <td>Guess</td>
                  <td>Points</td>
              </tr>
          </thead>
          <tbody>
            ${[...e.game.players].sort((e,t)=>t.points-e.points).map(e=>v(e))}
          </tbody>
      </table>`;return t?(e.game.hackLastQuestion=e.game.currentQuestion,s["a"]`
      ${n}
      <div class="button" on-click=${t=>{++e.game.round,e.game.round>=e.game.maxRounds?Object(r.changePage)("win"):(e.isCreator&&Object(a.createNewQuestion)(e.game.ref),Object(r.changePage)("question"))}}>Next round</div>
    `):s["a"]`
      ${n}
      <img width="100" height="100" src="https://m.popkey.co/fe4ba7/DYALX.gif" />`},v=e=>{const t=state.game.currentQuestion.guesses.get(e.uid);return s["a"]`
  <tr>
      <td>${e.displayName}</td>
      <td>${t?t.guess:""}</td>
      <td>${e.points}</td>
  </tr>`},b=["A long concatination of words that you can remember easily has a better cryptographic strength than a short password with mixed symbols","Forced frequent password changes weaken the choice of passwords","Uniform random passwords are hard to remember, why not let the user choose them?","Nist recommends: No password expiry without a reason","Nist recommends: Longer passwords have a higher cryptographic strength than complex short ones","Nist recommends: Passwords should have at least 8 characters","Nist recommends: Use password managers, if you can",s["a"]`Avoid commonly used passwords. Check your choice at <a href=\"https://haveibeenpwned.com/Passwords\">HaveIBeenPwned</a>!`];function P(){return b[Math.floor(Math.random()*b.length)]}const Q=e=>!0===e.game.currentQuestion.done?i():s["a"]`
  <h1>${e.game.currentQuestion.answer}</h1> 
  <input type="text" placeholder="Leaked... times" name="input" id="input-answer"/>
  <div class="button" on-click=${t=>{const n=document.getElementById("input-answer").value;isNaN(n)||(e.game.currentQuestion.answerQuestion(e.user,n),Object(r.changePage)("answer"))}}>Submit</div>
  <br />
  ${P()}
`,j=e=>!0===e.game.currentQuestion.done?i():s["a"]`
  <h1>${e.game.currentQuestion.question}</h1>
  <input type="text" placeholder="Guess password!" name="input" id="input-answer" />
  <div class="button" on-click=${t=>{const n=document.getElementById("input-answer").value;e.game.currentQuestion.answerQuestion(e.user,n),Object(r.changePage)("answer")}}>Submit</div>
  <br />
  ${P()}
  `,k=e=>s["a"]`
<h1>Your group key is: </h1>
<h1><a href="/#!${e.game.ref.key}" on-click=${t=>{navigator.share&&navigator.share({title:"My Little Pwnage",text:"Lets guess some passwords!",url:"/#!"+e.game.ref.key}).then(()=>console.log("Successful share")).catch(e=>console.log("Error sharing",e))}}>${e.game.ref.key}</a></h1>
<input type="text" placeholder="Enter your name!" name="name" id="input-name" />
<div class="button" on-click=${async t=>{const n=document.getElementById("input-name").value;""!==n&&(e.user.displayName=n,e.user.points=0,e.game.addPlayer(e.user),Object(r.changePage)("question"))}}>Enter group</div>
`,N=["https://media.giphy.com/media/2gtoSIzdrSMFO/giphy.mp4","https://media.giphy.com/media/g9582DNuQppxC/giphy.mp4","https://media.giphy.com/media/xT0xezQGU5xCDJuCPe/giphy.mp4","https://media.giphy.com/media/3o6fIUZTTDl0IDjbZS/giphy.mp4","https://media.giphy.com/media/xHMIDAy1qkzNS/giphy.mp4","https://media.giphy.com/media/DKnMqdm9i980E/giphy.mp4","https://media.giphy.com/media/3o7TKJhBfNCiispgDm/giphy.mp4","https://media.giphy.com/media/cQNRp4QA8z7B6/giphy.mp4","https://media.giphy.com/media/K3RxMSrERT8iI/giphy.mp4","https://media.giphy.com/media/RWFpHUbc6s492/giphy.mp4","https://media.giphy.com/media/3NtY188QaxDdC/giphy.mp4","https://media.giphy.com/media/rjkJD1v80CjYs/giphy.mp4","https://media.giphy.com/media/DYH297XiCS2Ck/giphy.mp4","https://media.giphy.com/media/l4hLwMmFVBOAKF3EI/giphy.mp4","https://media3.giphy.com/media/SRO0ZwmImic0/giphy.mp4"],q=e=>s["a"]`
<h1>${e.game.players.size>0?[...e.game.players].sort((e,t)=>t.points-e.points)[0].displayName:"?"} wins!</h1>
<video muted autoplay loop crossorigin="anonymous" src="${N[Math.floor(Math.random()*N.length)]}"></video>

<div class="button" on-click=${e=>Object(r.changePage)("index")}>New game</div>`,$=e=>s["a"]`
<video muted autoplay loop crossorigin="anonymous" src="https://media.giphy.com/media/LiWsL77P4tA9a/giphy.mp4"></video>
<h1>Waiting for players...</h1>
`;n.d(t,"answerTemplate",function(){return o}),n.d(t,"createGameTemplate",function(){return u.a}),n.d(t,"createMPGameTemplate",function(){return f}),n.d(t,"enterGroupTemplate",function(){return y}),n.d(t,"leaderboardTemplate",function(){return w}),n.d(t,"questionGuessAmountTemplate",function(){return Q}),n.d(t,"questionGuessPwTemplate",function(){return j}),n.d(t,"setNameTemplate",function(){return k}),n.d(t,"loadingTemplate",function(){return i}),n.d(t,"winTemplate",function(){return q}),n.d(t,"waitingTemplate",function(){return $}),n.d(t,"createNewGame",function(){return a.createNewGame}),n.d(t,"createNewQuestion",function(){return a.createNewQuestion}),n.d(t,"addPlayerToGame",function(){return a.addPlayerToGame}),n.d(t,"answerQuestion",function(){return a.answerQuestion}),n.d(t,"playerReady",function(){return a.playerReady}),n.d(t,"getPasswordCount",function(){return a.getPasswordCount}),n.d(t,"retrievePseudoRandomNumber",function(){return a.retrievePseudoRandomNumber}),n.d(t,"joinGame",function(){return a.joinGame}),n.d(t,"openGame",function(){return a.openGame}),n.d(t,"login",function(){return p}),n.d(t,"anonLogin",function(){return l}),n.d(t,"logout",function(){return g})}}]);
//# sourceMappingURL=gamelogic.bundle.1f34d0524f14d7ec16c8.js.map